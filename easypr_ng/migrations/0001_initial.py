# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-02-09 09:48
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('blog_url', models.URLField()),
                ('name_slug', models.CharField(max_length=275)),
                ('category', models.CharField(choices=[(b'top-blogs', b'Top Blogs'), (b'technology', b'Technology')], max_length=125)),
                ('price', models.FloatField(default=0.0)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(max_length=1000)),
                ('website', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('reply', models.TextField(max_length=1000)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Comment')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=14)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[(b'new', b'new'), (b'contacted', b'contacted'), (b'in_progress', b'In progress'), (b'closed', b'closed')], default=b'new', max_length=25)),
                ('request_outcome', models.CharField(choices=[(b'pending', b'pending'), (b'success', b'success'), (b'declined', b'declined'), (b'deferred', b'deferred'), (b'dropped', b'dropped')], default=b'pending', max_length=25)),
                ('contact_person', models.CharField(max_length=125)),
                ('contact_email', models.EmailField(max_length=255)),
                ('phone_number', models.CharField(max_length=15)),
                ('preferred_interview_date', models.DateTimeField()),
                ('interview_venue', models.TextField(max_length=300, null=True)),
                ('interview_date', models.DateTimeField()),
                ('interview_time', models.DateTimeField()),
                ('person_to_be_interviewed', models.CharField(max_length=125)),
                ('closed_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_closed_by', to=settings.AUTH_USER_MODEL)),
                ('contacted_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_contacted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_requested',),
                'verbose_name_plural': 'Interview request',
            },
        ),
        migrations.CreateModel(
            name='KeyVault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=255)),
                ('sc_key', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Media_Marketing_Bundles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_slug', models.CharField(max_length=275)),
                ('features', models.TextField(help_text=b'list all features seperated by semi colon', max_length=2000)),
                ('price_N', models.FloatField(default=0.0)),
                ('price_D', models.FloatField(default=0.0)),
                ('caption', models.TextField(default=b'', max_length=150)),
                ('image', models.ImageField(upload_to=b'bundle_tiles')),
                ('thumbnail', models.ImageField(upload_to=b'bundle_thumbnails')),
                ('active', models.BooleanField(default=True)),
                ('is_request', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Marketing Bundles',
            },
        ),
        migrations.CreateModel(
            name='MediaContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=125)),
                ('last_name', models.CharField(max_length=125)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('email', models.CharField(max_length=225)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_slug', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('name_slug', models.CharField(max_length=75)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'basic', b'Basic'), (b'regular', b'Regular'), (b'premium', b'Premium'), (b'basic-hp', b'Basic HP'), (b'regular-hp', b'Regular HP'), (b'basic-fp', b'Basic FP'), (b'regular-fp', b'Regular FP'), (b'premium-plus', b'Premium Plus')], max_length=75)),
                ('media_outreach_credit', models.CharField(default=1, max_length=25)),
                ('online', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'online_newspaper_publishing')),
                ('monitoring', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('free_consulting', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('newsroom', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'Newsroom via EasyPR Media Desk')),
                ('google_news_inclusions', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('reuters_news_network', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('hyperlinks', models.CharField(max_length=5, verbose_name=b'hyperlinks in online press release')),
                ('notification', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'publication notification via email')),
                ('autopost', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'autopost to social media account')),
                ('analytics', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'detailed analytics report')),
                ('expedited', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'expedited release processing')),
                ('available_on_homepage', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5, verbose_name=b'news made available to journalists, bloggers and researchers via EasyPR homepage')),
                ('content_writing', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('content_editing', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('featured_package', models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], max_length=5)),
                ('price_naira', models.FloatField(default=0.0, max_length=25)),
                ('price_dollar', models.FloatField(default=0.0, max_length=25)),
                ('active', models.BooleanField(default=False)),
                ('is_promo', models.BooleanField(default=False)),
                ('promo_starts', models.DateTimeField(auto_now_add=True)),
                ('promo_ends', models.DateTimeField(auto_now_add=True)),
                ('promo_price_dollar', models.FloatField(default=0.0, max_length=25)),
                ('promo_price_naira', models.FloatField(default=0.0, max_length=25)),
            ],
            options={
                'verbose_name_plural': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='PayDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=25, null=True)),
                ('payment_method', models.CharField(choices=[(b'Bank Deposit', b'Bank Deposit'), (b'Card Payment', b'Card Payment'), (b'Bank Transfer', b'Bank Transfer')], default=b'', max_length=75)),
                ('amount_paid', models.FloatField(default=0.0)),
                ('date_paid', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, choices=[(b'Diamond Bank', b'Diamond Bank'), (b'GTB', b'GTB')], max_length=100, null=True)),
                ('currency', models.CharField(blank=True, max_length=100, null=True)),
                ('teller_number', models.CharField(blank=True, max_length=15, null=True)),
                ('pay_status', models.CharField(choices=[(b'verified', b'verified'), (b'pending', b'pending'), (b'failed', b'failed')], default=b'pending', max_length=25)),
                ('verified_by', models.CharField(max_length=125)),
                ('date_verified', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Payment By')),
            ],
        ),
        migrations.CreateModel(
            name='PressMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_slug', models.CharField(max_length=150)),
                ('media_type', models.CharField(max_length=150)),
                ('price_per', models.FloatField(default=0.0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('caption', models.CharField(max_length=125)),
            ],
        ),
        migrations.CreateModel(
            name='PRStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anon_userID', models.CharField(max_length=75, verbose_name=b'Annonymous user ID')),
                ('business_type', models.CharField(choices=[(b'NA', b'NA'), (b'Company', b'Company'), (b'Individual', b'Individual')], default=b'Company', max_length=25)),
                ('company_type', models.CharField(choices=[(b'NA', b'NA'), (b'Public', b'Public'), (b'Private', b'Private')], default=b'Private', max_length=75)),
                ('is_pr_agent', models.CharField(choices=[(b'Yes', b'Yes'), (b'No', b'No')], default=b'No', max_length=75)),
                ('size_of_pr_team', models.IntegerField(default=0)),
                ('target_audience', models.TextField(max_length=1000, null=True)),
                ('pr_goals', models.TextField(max_length=1000, null=True)),
                ('frequency_of_pr', models.CharField(choices=[(b'NA', b'NA'), (b'weekly', b'Weekly'), (b'monthly', b'Monthly'), (b'several-times-a-month', b'Several Times a Month'), (b'quartely', b'Quartely'), (b'annually', b'Annually'), (b'first-time-user', b'First Time User')], default=b'monthly', max_length=100)),
                ('target_audience_location', models.CharField(max_length=250, null=True)),
                ('currently_use_pr_db', models.BooleanField(default=False)),
                ('social_media_used', models.TextField(max_length=1000, null=True)),
                ('pr_db_used', models.TextField(max_length=1000, null=True)),
                ('require_pr_writing', models.BooleanField(default=False)),
                ('require_media_pitching', models.BooleanField(default=False)),
                ('do_you_have_newsroom', models.BooleanField(default=False)),
                ('name_pr_newsroom_link', models.CharField(max_length=200)),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('action_status', models.CharField(choices=[(b'new', b'new'), (b'contacted', b'contacted'), (b'in_progress', b'In progress'), (b'closed', b'closed')], default=b'Contacted', max_length=75)),
                ('company_name', models.CharField(max_length=200, null=True)),
                ('contact_name', models.CharField(max_length=125, null=True)),
                ('email', models.CharField(max_length=125, null=True)),
                ('phone_number', models.CharField(max_length=25, null=True)),
                ('completed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['date_submitted'],
                'verbose_name_plural': 'PR Strategy',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=15)),
                ('post_title', models.CharField(max_length=175)),
                ('title_slug', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[(b'new', b'new'), (b'sent_to_external_editor', b'sent_to_external_editor'), (b'processing', b'processing'), (b'published', b'published'), (b'rejected', b'rejected')], default=b'New', max_length=50)),
                ('post_body', models.TextField(blank=True, max_length=3000, null=True)),
                ('person_to_quote', models.CharField(blank=True, max_length=125, null=True)),
                ('persons_position', models.CharField(blank=True, max_length=125, null=True)),
                ('uploaded_text', models.FileField(blank=True, null=True, upload_to=b'publication/text_file')),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('publish_online', models.BooleanField(default=False, verbose_name=b'Do you also want online publication of the chosen media? ')),
                ('completed', models.BooleanField(default=False)),
                ('rejection_reason', models.CharField(blank=True, max_length=350, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('archived_original_post', models.TextField(blank=True, max_length=3000, null=True)),
                ('archived_post_title', models.CharField(blank=True, max_length=175, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Third_party_Editor', to=settings.AUTH_USER_MODEL)),
                ('media_houses', models.ManyToManyField(to='easypr_ng.MediaHouse')),
                ('platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.MediaPlatform', verbose_name=b'Media platform')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('press_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.PressMaterial', verbose_name=b'Media category')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Edited_and_published_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublicationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'publication')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Publication')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=15)),
                ('deleted', models.BooleanField(default=False)),
                ('ordered', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[(b'New', b'New'), (b'Processing', b'Processing'), (b'Pending', b'Pending'), (b'Rejected', b'Rejected'), (b'Closed', b'Closed')], default=b'New', max_length=75)),
                ('date_purchased', models.DateTimeField(auto_now_add=True)),
                ('service_purchased', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='Redirect_url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Publication')),
            ],
        ),
        migrations.CreateModel(
            name='RequestBundleService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=14)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[(b'new', b'new'), (b'contacted', b'contacted'), (b'in_progress', b'In progress'), (b'closed', b'closed')], default=b'new', max_length=25)),
                ('request_outcome', models.CharField(choices=[(b'pending', b'pending'), (b'success', b'success'), (b'declined', b'declined'), (b'deferred', b'deferred'), (b'dropped', b'dropped')], default=b'pending', max_length=25)),
                ('contact_person', models.CharField(max_length=125)),
                ('contact_email', models.EmailField(max_length=255)),
                ('phone_number', models.CharField(max_length=15)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Media_Marketing_Bundles')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'service_request')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('name_slug', models.CharField(max_length=75)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=14)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[(b'new', b'new'), (b'contacted', b'contacted'), (b'in_progress', b'In progress'), (b'closed', b'closed')], default=b'new', max_length=25)),
                ('request_outcome', models.CharField(choices=[(b'pending', b'pending'), (b'success', b'success'), (b'declined', b'declined'), (b'deferred', b'deferred'), (b'dropped', b'dropped')], default=b'pending', max_length=25)),
                ('contact_person', models.CharField(max_length=125)),
                ('contact_email', models.EmailField(max_length=255)),
                ('phone_number', models.CharField(max_length=15)),
                ('service_type', models.CharField(max_length=100)),
                ('sector', models.CharField(choices=[(b'Finance', b'Finance')], max_length=100)),
                ('brief_description', models.TextField(blank=True, max_length=500, null=True)),
                ('target_media', models.CharField(choices=[(b'Newspaper', b'Newspaper'), (b'Blog', b'Blog')], max_length=125, null=True)),
                ('time_service_needed', models.CharField(max_length=75, null=True)),
                ('preferred_call_time', models.CharField(max_length=50, null=True)),
                ('allow_call', models.BooleanField(default=False)),
                ('name_of_event', models.CharField(default=b'Not Applicable', max_length=100)),
                ('event_date', models.DateTimeField(null=True)),
                ('event_time', models.CharField(max_length=10, null=True)),
                ('event_venue', models.CharField(max_length=225, null=True)),
                ('total_price', models.FloatField(default=0.0)),
                ('post_content', models.TextField(max_length=3000)),
                ('uploaded_post_content', models.FileField(help_text=b'for blogger distibution submission', upload_to=b'blogger_distribution')),
                ('page_size', models.CharField(blank=True, max_length=125, null=True)),
                ('page_color', models.CharField(blank=True, choices=[(b'black and white', b'black and white'), (b'color', b'color')], max_length=125, null=True)),
                ('media_house', models.CharField(max_length=125, null=True)),
                ('region', models.CharField(max_length=125, null=True)),
                ('adv_duration', models.CharField(max_length=125, null=True)),
                ('adv_service_type', models.CharField(max_length=125, null=True)),
                ('audio_file', models.FileField(help_text=b'for Radio advert submission', null=True, upload_to=b'uploads/audio/')),
                ('video_file', models.FileField(help_text=b'for TV advert submission', null=True, upload_to=b'uploads/video/')),
                ('advert_image_file', models.FileField(help_text=b'for newpaper advert submission', null=True, upload_to=b'uploads/newspaper/advert')),
                ('adv_instructions', models.TextField(max_length=250, null=True)),
                ('blog_list', models.ManyToManyField(to='easypr_ng.Blogs')),
                ('closed_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_by', to=settings.AUTH_USER_MODEL)),
                ('contacted_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_requested',),
                'verbose_name_plural': 'Service request',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=165)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('posted_by', models.CharField(max_length=150)),
                ('persons_position', models.CharField(max_length=75)),
                ('persons_company', models.CharField(max_length=125)),
                ('persons_image', models.FileField(upload_to=b'testimonial')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseInvoice',
            fields=[
                ('purchase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='easypr_ng.Purchase')),
                ('receipt_no', models.CharField(max_length=12)),
                ('invoice', models.FileField(blank=True, null=True, upload_to=b'Invoices/%Y-%M-%D')),
            ],
            bases=('easypr_ng.purchase',),
        ),
        migrations.AddField(
            model_name='requestimage',
            name='request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.ServiceRequest'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='bundle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Media_Marketing_Bundles'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Package'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='payment_details',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.PayDetails', verbose_name=b'Payment details'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='publication',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Publication'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Purchased By'),
        ),
        migrations.AddField(
            model_name='publication',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Sector', verbose_name=b'Media sector'),
        ),
        migrations.AddField(
            model_name='publication',
            name='site',
            field=models.ManyToManyField(to='sites.Site'),
        ),
        migrations.AddField(
            model_name='package',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.PressMaterial'),
        ),
        migrations.AddField(
            model_name='mediahouse',
            name='platform',
            field=models.ManyToManyField(to='easypr_ng.MediaPlatform'),
        ),
        migrations.AddField(
            model_name='mediacontact',
            name='media_house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.MediaHouse'),
        ),
        migrations.AddField(
            model_name='interviewrequest',
            name='preferred_media_house',
            field=models.ManyToManyField(to='easypr_ng.MediaHouse'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easypr_ng.Publication'),
        ),
        migrations.AddField(
            model_name='comment',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
